<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MitulPesterii">


    <!-- Hoverless button style-->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The window icon style-->
    <Style x:Key="WindowIconButton" BasedOn="{StaticResource Hoverless}" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!-- Window Button Style-->
    <Style x:Key="WindowButtonStyle" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Gray" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundVeryLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--<Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="70" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8">
                        <Grid>
                            <Viewbox>
                                <TextBlock x:Name="MyContentPresenter" 
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center" 
                                   Margin="20"
                                   FontFamily="Charlemagne Std"
                                   Padding="{TemplateBinding Padding}"
                                   FontWeight="Bold"
                                   FontStyle="Italic"
                                   FontSize="20"
                                   HorizontalAlignment="Center"
                                   >
                                </TextBlock>
                                
                            </Viewbox>

                            <Grid.Background >
                                <LinearGradientBrush x:Name="LGN" StartPoint="0,0" EndPoint="0, 1">
                                    <GradientStop x:Name="GradientStop1" Color="#F8ECC2" Offset="0.0" />
                                    <GradientStop x:Name="GradientStop2" Color="#5fffff" Offset="0.5" />
                                    <GradientStop x:Name="GradientStop3" Color="#F8ECC2" Offset="1.0" />
                                </LinearGradientBrush>
                            </Grid.Background>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        --><!-- Animation for the first gradient--><!--
                                        <ColorAnimation Storyboard.TargetName="GradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:0.1"
                                                        From="#F8ECC2" To="#c9a880" />
                                        --><!-- Animation for the third gradient --><!--
                                        <ColorAnimation Storyboard.TargetName="GradientStop3"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:0.1"
                                                        From="#F8ECC2" To="#c9a880" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        --><!-- Exit Animation for the first gradient--><!--
                                        <ColorAnimation Storyboard.TargetName="GradientStop1"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:0.1"
                                                        From="#c9a880" To="#F8ECC2" />
                                        --><!-- Exit Animation for the third gradient --><!--
                                        <ColorAnimation Storyboard.TargetName="GradientStop3"
                                                        Storyboard.TargetProperty="Color"
                                                        Duration="0:0:0.1"
                                                        From="#c9a880" To="#F8ECC2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>-->
    
    
    <!-- Animation for the menu buttons-->
    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="70" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8">
                        <Grid>
                            <Viewbox>
                                <TextBlock x:Name="MyContentPresenter" 
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center" 
                                   Margin="20"
                                   FontFamily="{StaticResource FancyHandWriting}"
                                   Padding="{TemplateBinding Padding}"
                                   FontWeight="Bold"
                                   FontStyle="Italic"
                                   FontSize="45"
                                   HorizontalAlignment="Center"
                                   >
                                </TextBlock>

                            </Viewbox>
                            <Grid.Background>
                                <ImageBrush ImageSource="/Images/Rocks/rock1.png" Stretch="Fill" />
                            </Grid.Background>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="200"
                                                         To="220"
                                                         Duration="0:0:0.2" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                         From="50 10 0 10"
                                                         To="40 10 0 10"
                                                         Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetProperty="Height"
                                                         From="70"
                                                         To="74"
                                                         Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         To="200"
                                                         From="220"
                                                         Duration="0:0:0.2" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                         To="50 10 0 10"
                                                         From="40 10 0 10"
                                                         Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetProperty="Height"
                                                         To="70"
                                                         From="74"
                                                         Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Animation for the top menu button-->
    <Style x:Key="MenuButtonStyleTopButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="70" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8">
                        <Grid>
                            <Viewbox>
                                <TextBlock x:Name="MyContentPresenter" 
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center" 
                                   Margin="20"
                                   FontFamily="{StaticResource FancyHandWriting}"
                                   Padding="{TemplateBinding Padding}"
                                   FontWeight="Bold"
                                   FontStyle="Italic"
                                   FontSize="45"
                                   HorizontalAlignment="Center"
                                   >
                                </TextBlock>

                            </Viewbox>
                            <Grid.Background>
                                <ImageBrush ImageSource="/Images/Rocks/rock1.png" Stretch="Fill" />
                            </Grid.Background>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         From="200"
                                                         To="220"
                                                         Duration="0:0:0.2" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                         From="50 125 0 10"
                                                         To="40 125 0 10"
                                                         Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetProperty="Height"
                                                         From="70"
                                                         To="74"
                                                         Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width"
                                                         To="200"
                                                         From="220"
                                                         Duration="0:0:0.2" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                         To="50 125 0 10"
                                                         From="40 125 0 10"
                                                         Duration="0:0:0.2" />
                                        <!--<DoubleAnimation Storyboard.TargetProperty="Height"
                                                         To="70"
                                                         From="74"
                                                         Duration="0:0:0.2" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <!-- Animation for the buttons on the Despre Platon page-->
    <Style x:Key="DesprePlatonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8">
                        <Grid>
                            <!--<Viewbox>
                                <TextBlock x:Name="MyContentPresenter" 
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center" 
                                   Margin="20"
                                   FontFamily="{StaticResource FancyHandWriting}"
                                   Padding="{TemplateBinding Padding}"
                                   FontWeight="Bold"
                                   FontStyle="Italic"
                                   FontSize="45"
                                   HorizontalAlignment="Center"
                                   >
                                </TextBlock>

                            </Viewbox>-->
                            <Grid.Background>
                                <ImageBrush ImageSource="/Images/Backgrounds Papyrus/OldPapyrus2Transparent.png" Stretch="Fill" />
                            </Grid.Background>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <!--Animation for the video buttons-->
    <Style TargetType="{x:Type Button}" x:Key="GrowStyle" BasedOn="{StaticResource Hoverless}" >
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             Duration="0:0:0.5"
                                             From="40"
                                             To="43" />
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             Duration="0:0:0.5"
                                             From="40"
                                             To="43" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             Duration="0:0:0.5"
                                             To="40"
                                             From="43" />
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             Duration="0:0:0.5"
                                             To="40"
                                             From="43" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <!-- Tool tip style -->
    <Style TargetType="{x:Type ToolTip}" x:Key="ToolTipShape">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="450" />
        <Setter Property="Height" Value="250" />
        
    </Style>
    
    
    <!-- Style for the number button on the page Evaluare -->
    <Style TargetType="{x:Type Button}" x:Key="NumberStyle" BasedOn="{StaticResource Hoverless}" >
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource FancyHandWriting}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="45" />

    </Style>
    
    <!-- Radio button style -->
    <!--<Style TargetType="{x:Type RadioButton}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="White" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16" Margin="0 10 0 0">
                                --><!--Define size of the Bullet-->
                                <!--The two borders--><!--
                                <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#FFADADAD" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        --><!--Text element--><!--
                        <TextBlock Margin="3,1,0,0" Foreground="#FF3E3E3E" FontFamily="{StaticResource LatoBlack}" FontSize="25" >
                            <ContentPresenter TextBlock.FontFamily="{StaticResource LatoBlack}" TextBlock.FontSize="25" Content="{TemplateBinding Content}"/>
                        </TextBlock>
                    </BulletDecorator>
                    --><!--If item is checked, trigger the visibility of the mark--><!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            --><!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting--><!--
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>